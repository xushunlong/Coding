package 滑动窗口问题;import java.lang.reflect.Array;import java.util.ArrayList;import java.util.Arrays;import java.util.List;public class threeSum {    public static void main(String[] args) {        int input[] = {-1, 0, 1, 2, -1, -4};        System.out.println(threeSum(input));    }    /*     * 15. 三数之和:https://leetcode-cn.com/problems/3sum     * 犹豫不决先排序，步步逼近双指针     * */    public static List<List<Integer>> threeSum(int[] nums) {        List<List<Integer>> list = new ArrayList<>();        Arrays.sort(nums);        int l = 0, r = 0;        for (int i = 0; i < nums.length - 2; i++) {            if (i > 0 && nums[i] == nums[i - 1])                continue;            if (nums[i] > 0)                continue;            l = i + 1;            r = nums.length - 1;            while (l < r) {                int tmp = nums[l] + nums[r] + nums[i];                if (tmp > 0) {                    r--;                } else if (tmp < 0) {                    l++;                } else {                    List<Integer> tmpList = new ArrayList<>();                    tmpList.add(nums[i]);                    tmpList.add(nums[l]);                    tmpList.add(nums[r]);                    list.add(tmpList);                    while (l < r && nums[l + 1] == nums[l]) ++l;                    while (l < r && nums[r - 1] == nums[r]) --r;                    l++;                    r--;                }            }        }        return list;    }}